<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 读取数据库配置文件信息 -->
    <context:property-placeholder location="classpath:config.properties"/><!-- classpath = src/main/resources -->
    <!-- Druid -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
    <!-- <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"> -->
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        
        <!-- 配置监控统计拦截的filters -->
     	<property name="filters" value="stat" />
        
        <!-- 配置初始化大小、最小、最大 -->
	     <property name="maxActive" value="20" />
	     <property name="initialSize" value="1" />
	     <property name="minIdle" value="1" />
        
        <!-- 配置获取连接等待超时的时间 -->
     	<property name="maxWait" value="60000" />  
     	
     	<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
	     <property name="timeBetweenEvictionRunsMillis" value="60000" />
	
	     <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	     <property name="minEvictableIdleTimeMillis" value="300000" />
	
	     <property name="testWhileIdle" value="true" />
	     <property name="testOnBorrow" value="false" />
	     <property name="testOnReturn" value="false" />
	
	     <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
	     <property name="poolPreparedStatements" value="true" />
	     <property name="maxOpenPreparedStatements" value="20" />
     	
     	  
    </bean>

	<!--  -->

    <!-- 注册SqlSessionFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 自动扫描mappers.xml文件 -->
        <property name="mapperLocations" value="classpath:mybatis/mapper/*.xml" />
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!-- 扫描pojo包，使用别名 -->
        <property name="typeAliasesPackage" value="com.jd.pojo"></property>
    </bean>
    
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    	<!-- 需要扫描的dao接口包 -->
        <property name="basePackage" value="com.jd.dao" />
        <!-- 注入sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>
</beans>